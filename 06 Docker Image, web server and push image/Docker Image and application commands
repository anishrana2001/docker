**How to create an Image from Container or from DockerFile** 



**How to configure web server** 
systemctl status docker.service
docker container ls -a
docker container rm -f container1 container2
docker run -it --name container1 ubuntu
Below commands need to te executed on container.
=======================================================  

apt-get update
apt-get -y install apache2 vim curl elinks
sed -i '$a\ServerName 127.0.0.1'  /etc/apache2/apache2.conf
mkdir /var/www/container1/
cd /var/www/container1/
cat > index.html <<EOF
<html>
<head>
  <title> Docker Container1 of Ubuntu! </title>
</head>
<body>
  <p> I'm running this website on Docker Container1 on Ubuntu OS
</body>
</html>
EOF

cd /etc/apache2
service apache2 start
cd /etc/apache2/sites-available/
cp 000-default.conf container1.conf
sed -i 's=DocumentRoot /var/www/html=DocumentRoot   /var/www/container1/=' container1.conf
sed -i '/container1/ a \\tServerName localhost' container1.conf
a2ensite container1.conf
a2dissite 000-default.conf
service apache2 reload
elinks http://localhost
CLT+P+Q
=======================================================  

**How to create Image from running Container** 
[root@server1 ~]# docker commit container1 apache1-ubuntu
sha256:927a12adccec54ba33459e5a96da69c4fb680576e4d016c4c4ce428896398fca
[root@server1 ~]#

>We can delete the container1 and re-build the container from new image i.e. apache1-ubuntu.
>Remove the container and check if we get all the information from the image that we build from previous container.

[root@ip-172-31-33-87 ec2-user]# docker container rm -f container1
container1

docker run -it  --name container1 apache1-ubuntu
root@e7d0ab7090d3:/# service apache2 start
root@e7d0ab7090d3:/# elinks http://localhost
                                                                                                                                                                                Ubuntu rocks!
   I'm running this website on Docker Container1 on Ubuntu OS , Cheers!

CLT P + CLT Q

docker run -itd  --name container2 apache1-ubuntu
docker exec -it container2 sed -i 's/Container1/Container2/' /var/www/container1/index.html
docker exec -it container2 service apache2 start
docker exec -it container2 service apache2 reload


docker container inspect container1 | grep -i ipaddress
docker container inspect container2 | grep -i ipaddress
docker exec -it container1 /bin/bash

ping 172.17.0.3   > This should not work because PING command not available
apt-get install iputils-ping -y
ping 172.17.0.3   



>From the base machine 
curl http://172.17.0.3
curl http://172.17.0.2
  

**How to create Image from DockerFile** 

mkdir /data
cd /data
touch hostfile{1..5}.txt
ls -ltr 
cat > index.html <<EOF
<html>
<head>
  <title> Docker Container1 of Ubuntu! </title>
</head>
<body>
  <p> I'm running this website on Docker Container1 on Ubuntu OS
</body>
</html>
EOF

tar cvfz myfile.tar *

cat > file1.txt <<EOF
This is my first file.
EOF

ls -ltr
rm -f hostfile*
rm -f index.html
ls -ltr

vi Dockerfile
# Usage: FROM [image_name]
FROM ubuntu:14.04
MAINTAINER Anish Rana
ENV TZ=Asia/Dubai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
RUN apt-get update
RUN apt-get -y install apache2 vim curl elinks
ADD    myfile.tar   /var/www/container1/
COPY   file1.txt   /var/www/container1/
RUN cd /etc/apache2/sites-available/
RUN cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/container1.conf
RUN sed -i 's=DocumentRoot /var/www/html=DocumentRoot   /var/www/container1/=' /etc/apache2/sites-available/container1.conf
RUN sed -i '/container1/ a \\tServerName localhost' /etc/apache2/sites-available/container1.conf
RUN a2ensite container1
RUN a2dissite 000-default.conf
ENV   MY_VAR     “This is my server”
ENV   PASSWD   THismyPass
WORKDIR      /data/
EXPOSE   8080
VOLUME   /myvol
ENTRYPOINT service apache2 restart && bash


curl http://localhost
docker image ls
docker image build -t mywebserver1 .
docker image ls
docker volume ls
ifconfig
cd /tmp/
docker container run -itd --name mynewcontainer1 mywebserver1 /bin/bash
docker container exec -it mynewcontainer1 /bin/bash     # > check the working Directory

cd /var/www/container1/
ls -ltr
cat file1.txt
curl http://localhost
exit

docker container inspect mynewcontainer1  | grep volume
docker volume ls
docker container ls -a


How to push the Image to Dockerhub

docker login 
docker image ls
docker image tag mywebserver1  anishrana2001/ar2001:mywebserver1
docker image ls
docker push anishrana2001/ar2001:mywebserver1
